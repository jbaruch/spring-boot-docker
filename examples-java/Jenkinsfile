#!/usr/bin/env groovy

node ('master') {
    def rtServer
    def buildInfo
    def dockerReg="jfrog.local:5001"
    def dockerNamespace='jbaruch'
    def dockerFinalTag
    def tagDockerApp
    def rtDocker
    stage('initializing') {
      rtServer = Artifactory.newServer url: "http://jfrog.local/artifactory", credentialsId: CREDENTIALS
      rtDocker = Artifactory.docker credentialsId: CREDENTIALS
      git url: 'https://github.com/jbaruch/spring-boot-docker.git'
      dockerFinalTag="${env.BUILD_NUMBER}"
    }
    stage('maven build') {
      dir ('examples-java') {
        def rtMaven = Artifactory.newMavenBuild()
        rtMaven.tool = 'mvn'
        rtMaven.resolver server: rtServer, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
        rtMaven.deployer server: rtServer, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'
        buildInfo = rtMaven.run pom: './pom.xml', goals: 'clean install -DskipTests'
        buildInfo.env.capture = true
      }
    }
    stage('build helloworld-service docker') {
      dir ('examples-java/helloworld-service') {
        tagDockerApp = dockerReg+'/'+dockerNamespace+'/'+"helloworld-service"+':'+dockerFinalTag
        docker.build(tagDockerApp)
        rtDocker.push(tagDockerApp, 'docker-stage-local', buildInfo)
      }
    }
    stage('build guestbook-service docker') {
      dir ('examples-java/guestbook-service') {
        tagDockerApp = dockerReg+'/'+dockerNamespace+'/'+"guestbook-service"+':'+dockerFinalTag
        docker.build(tagDockerApp)
        rtDocker.push(tagDockerApp, 'docker-stage-local', buildInfo)
      }
    }
    stage('build helloworld-ui docker') {
      dir ('examples-java/helloworld-ui') {
        tagDockerApp = dockerReg+'/'+dockerNamespace+'/'+"helloworld-ui"+':'+dockerFinalTag
        docker.build(tagDockerApp)
        rtDocker.push(tagDockerApp, 'docker-stage-local', buildInfo)
      }
    }
    stage('push BuildInfo') {
      rtServer.publishBuildInfo buildInfo
    }	   
}
