#!/usr/bin/env groovy

node ('master') {
    git url: 'https://github.com/jbaruch/spring-boot-docker.git'
    def rtServer = Artifactory.newServer url: "http://jfrog.local/artifactory", credentialsId: CREDENTIALS
    def buildInfo = Artifactory.newBuildInfo()
    def dockerReg="jfrog.local:5001"
    def dockerNamespace='jbaruch'
    def dockerFinalTag="${env.BUILD_NUMBER}"
    def tagDockerApp
    def rtDocker
    buildInfo.env.capture = true
    stage('maven build') {
      dir ('examples-java') {
        sh 'mvn install -DskipTests'
      }
    }
    stage('build helloworld-service docker') {
      dir ('examples-java/helloworld-service') {
        tagDockerApp = dockerReg+'/'+dockerNamespace+'/'+"helloworld-service"+':'+dockerFinalTag
        docker.build(tagDockerApp)
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: CREDENTIALS, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
              rtDocker = Artifactory.docker("${env.USERNAME}", "${env.PASSWORD}")
              rtDocker.push(tagDockerApp, 'docker-stage-local', buildInfo)
        }        
      }
    }
    stage('build guestbook-service docker') {
      dir ('examples-java/guestbook-service') {
        tagDockerApp = dockerReg+'/'+dockerNamespace+'/'+"guestbook-service"+':'+dockerFinalTag
        docker.build(tagDockerApp)
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: CREDENTIALS, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
              rtDocker = Artifactory.docker("${env.USERNAME}", "${env.PASSWORD}")
              rtDocker.push(tagDockerApp, 'docker-stage-local', buildInfo)
        }        
      }
    }
    stage('build helloworld-ui docker') {
      dir ('examples-java/helloworld-ui-service') {
        tagDockerApp = dockerReg+'/'+dockerNamespace+'/'+"helloworld-ui"+':'+dockerFinalTag
        docker.build(tagDockerApp)
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: CREDENTIALS, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
              rtDocker = Artifactory.docker("${env.USERNAME}", "${env.PASSWORD}")
              rtDocker.push(tagDockerApp, 'docker-stage-local', buildInfo)
        }        
      }
    }
    stage('push BuildInfo') {
      rtServer.publishBuildInfo buildInfo
    }	   
}
